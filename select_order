Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.
select distinct CITY from STATION where lower(CITY) like 'a%' or lower(CITY) like 'e%' or  lower(CITY) like 'i%' or lower(CITY) like 'o%' or lower(CITY) like 'u%';
Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.
select distinct CITY from STATION where lower(CITY) like '%a' or lower(CITY) like '%e' or  lower(CITY) like '%i' or lower(CITY) like '%o' or lower(CITY) like '%u';
Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.
SELECT DISTINCT CITY FROM STATION WHERE (CITY LIKE 'A%' OR CITY LIKE 'E%' OR CITY LIKE 'I%' OR CITY LIKE 'O%' OR CITY LIKE 'U%') AND (CITY LIKE '%a' OR CITY LIKE '%e' OR CITY LIKE '%i' OR CITY LIKE '%o' OR CITY LIKE '%u') order by city;       
Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.
select distinct CITY from STATION where lower(CITY) not like 'a%' and  lower(CITY) not like 'e%' and lower(CITY) not like 'i%' and lower(CITY) not like 'o%' and lower(CITY) not like 'u%';
Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.
select distinct CITY from STATION where lower(CITY) not like '%a' and lower(CITY) not like '%e' and lower(CITY) not like '%i' and lower(CITY) not like '%o' and lower(CITY) not like '%u';
Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.
select distinct CITY from STATION where CITY not like 'a%' and CITY not like 'e%' and CITY not like 'i%' and CITY not like 'o%' and CITY not like 'u%' 
union
select distinct CITY from STATION where CITY not like '%a' and  CITY not like '%e' and CITY not like '%i' and CITY not like '%o' and CITY not like '%u';
Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.
select Name from students where Marks> 75 order by right(Name,3) asc,ID asc;
